% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/routes_processing.R
\name{match_centroids}
\alias{match_centroids}
\title{Match origin centroids to bike bus routes}
\usage{
match_centroids(
  routes_cents,
  top_routes,
  route_stats,
  origins,
  origin.id = names(origins)[1],
  origin_route.id = "O",
  id.col = "id",
  max_dist_to_bikebus = 300,
  min_dist_threshold = 500,
  attribute_trips = c("bicycle_godutch", "quietness", "gradient_smooth")
)
}
\arguments{
\item{routes_cents}{An sf object with candidate routes}

\item{top_routes}{An sf object with selected top routes}

\item{route_stats}{Route statistics from calc_stats()}

\item{origins}{An sf object with origin points/zones}

\item{origin.id}{Column name for origin ID in origins data. Auto-detected by default.}

\item{origin_route.id}{Column name for origin ID in route data. Default: "O"}

\item{id.col}{Column name for route ID. Default: "id"}

\item{max_dist_to_bikebus}{a buffer distance to assign the route to a bike bus}

\item{min_dist_threshold}{the minimum total trip distance to be included in a bike bus}

\item{attribute_trips}{Attribute for processing: "bicycle_godutch", "quietness", or "gradient_smooth"}
}
\value{
An sf object with origins matched to their assigned bike bus routes
}
\description{
Assigns origin points to their nearest bike bus routes within a distance
threshold, creating a mapping between residential areas and route services.
}
\examples{
\dontrun{
# Complete workflow
rnet <- routes_network(routes_almada, "bicycle_godutch")
bike_routes <- cycle_bus_routes(routes_almada, rnet)
top_routes <- filter_routes(bike_routes, top_n = 3)
stats <- calc_stats(routes_almada, rnet, bike_routes)
matched <- match_centroids(bike_routes, top_routes, stats, origins_lisbon)
}
}
